/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/documentation/general/datatables/server-side.js":
/*!*********************************************************************************!*\
  !*** ./resources/src/js/custom/documentation/general/datatables/server-side.js ***!
  \*********************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTDatatablesServerSide = function () {\n  // Shared variables\n  var table;\n  var dt;\n  var filterPayment; // Private functions\n\n  var initDatatable = function initDatatable() {\n    dt = $(\"#kt_datatable_example_1\").DataTable({\n      searchDelay: 500,\n      processing: true,\n      serverSide: true,\n      order: [[5, 'desc']],\n      stateSave: true,\n      select: {\n        style: 'os',\n        selector: 'td:first-child',\n        className: 'row-selected'\n      },\n      ajax: {\n        url: \"https://preview.keenthemes.com/api/datatables.php\"\n      },\n      columns: [{\n        data: 'RecordID'\n      }, {\n        data: 'Name'\n      }, {\n        data: 'Email'\n      }, {\n        data: 'Company'\n      }, {\n        data: 'CreditCardNumber'\n      }, {\n        data: 'Datetime'\n      }, {\n        data: null\n      }],\n      columnDefs: [{\n        targets: 0,\n        orderable: false,\n        render: function render(data) {\n          return \"\\n                            <div class=\\\"form-check form-check-sm form-check-custom form-check-solid\\\">\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\".concat(data, \"\\\" />\\n                            </div>\");\n        }\n      }, {\n        targets: 4,\n        render: function render(data, type, row) {\n          return \"<img src=\\\"\".concat(hostUrl, \"media/svg/card-logos/\").concat(row.CreditCardType, \".svg\\\" class=\\\"w-35px me-3\\\" alt=\\\"\").concat(row.CreditCardType, \"\\\">\") + data;\n        }\n      }, {\n        targets: -1,\n        data: null,\n        orderable: false,\n        className: 'text-end',\n        render: function render(data, type, row) {\n          return \"\\n                            <a href=\\\"#\\\" class=\\\"btn btn-light btn-active-light-primary btn-sm\\\" data-kt-menu-trigger=\\\"click\\\" data-kt-menu-placement=\\\"bottom-end\\\" data-kt-menu-flip=\\\"top-end\\\">\\n                                Actions\\n                                <span class=\\\"svg-icon svg-icon-5 m-0\\\">\\n                                    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\">\\n                                        <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                                            <polygon points=\\\"0 0 24 0 24 24 0 24\\\"></polygon>\\n                                            <path d=\\\"M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)\\\"></path>\\n                                        </g>\\n                                    </svg>\\n                                </span>\\n                            </a>\\n                            <!--begin::Menu-->\\n                            <div class=\\\"menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4\\\" data-kt-menu=\\\"true\\\">\\n                                <!--begin::Menu item-->\\n                                <div class=\\\"menu-item px-3\\\">\\n                                    <a href=\\\"#\\\" class=\\\"menu-link px-3\\\" data-kt-docs-table-filter=\\\"edit_row\\\">\\n                                        Edit\\n                                    </a>\\n                                </div>\\n                                <!--end::Menu item-->\\n                                \\n                                <!--begin::Menu item-->\\n                                <div class=\\\"menu-item px-3\\\">\\n                                    <a href=\\\"#\\\" class=\\\"menu-link px-3\\\" data-kt-docs-table-filter=\\\"delete_row\\\">\\n                                        Delete\\n                                    </a>\\n                                </div>\\n                                <!--end::Menu item-->\\n                            </div>\\n                            <!--end::Menu-->\\n                        \";\n        }\n      }],\n      // Add data-filter attribute\n      createdRow: function createdRow(row, data, dataIndex) {\n        $(row).find('td:eq(4)').attr('data-filter', data.CreditCardType);\n      }\n    });\n    table = dt.$; // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n\n    dt.on('draw', function () {\n      initToggleToolbar();\n      toggleToolbars();\n      handleDeleteRows();\n      KTMenu.createInstances();\n    });\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n\n\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-docs-table-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      dt.search(e.target.value).draw();\n    });\n  }; // Filter Datatable\n\n\n  var handleFilterDatatable = function handleFilterDatatable() {\n    // Select filter options\n    filterPayment = document.querySelectorAll('[data-kt-docs-table-filter=\"payment_type\"] [name=\"payment_type\"]');\n    var filterButton = document.querySelector('[data-kt-docs-table-filter=\"filter\"]'); // Filter datatable on submit\n\n    filterButton.addEventListener('click', function () {\n      // Get filter values\n      var paymentValue = ''; // Get payment value\n\n      filterPayment.forEach(function (r) {\n        if (r.checked) {\n          paymentValue = r.value;\n        } // Reset payment value if \"All\" is selected\n\n\n        if (paymentValue === 'all') {\n          paymentValue = '';\n        }\n      }); // Filter datatable --- official docs reference: https://datatables.net/reference/api/search()\n\n      dt.search(paymentValue).draw();\n    });\n  }; // Delete customer\n\n\n  var handleDeleteRows = function handleDeleteRows() {\n    // Select all delete buttons\n    var deleteButtons = document.querySelectorAll('[data-kt-docs-table-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault(); // Select parent row\n\n        var parent = e.target.closest('tr'); // Get customer name\n\n        var customerName = parent.querySelectorAll('td')[1].innerText; // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n\n        Swal.fire({\n          text: \"Are you sure you want to delete \" + customerName + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            // Simulate delete request -- for demo purpose only\n            Swal.fire({\n              text: \"Deleting \" + customerName,\n              icon: \"info\",\n              buttonsStyling: false,\n              showConfirmButton: false,\n              timer: 2000\n            }).then(function () {\n              Swal.fire({\n                text: \"You have deleted \" + customerName + \"!.\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn fw-bold btn-primary\"\n                }\n              }).then(function () {\n                // delete row data from server and re-draw datatable\n                dt.draw();\n              });\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: customerName + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  }; // Reset Filter\n\n\n  var handleResetForm = function handleResetForm() {\n    // Select reset button\n    var resetButton = document.querySelector('[data-kt-docs-table-filter=\"reset\"]'); // Reset datatable\n\n    resetButton.addEventListener('click', function () {\n      // Reset payment type\n      filterPayment[0].checked = true; // Reset datatable --- official docs reference: https://datatables.net/reference/api/search()\n\n      dt.search('').draw();\n    });\n  }; // Init toggle toolbar\n\n\n  var initToggleToolbar = function initToggleToolbar() {\n    // Toggle selected action toolbar\n    // Select all checkboxes\n    var container = document.querySelector('#kt_datatable_example_1');\n    var checkboxes = container.querySelectorAll('[type=\"checkbox\"]'); // Select elements\n\n    var deleteSelected = document.querySelector('[data-kt-docs-table-select=\"delete_selected\"]'); // Toggle delete selected toolbar\n\n    checkboxes.forEach(function (c) {\n      // Checkbox on click event\n      c.addEventListener('click', function () {\n        setTimeout(function () {\n          toggleToolbars();\n        }, 50);\n      });\n    }); // Deleted selected rows\n\n    deleteSelected.addEventListener('click', function () {\n      // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n      Swal.fire({\n        text: \"Are you sure you want to delete selected customers?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        showLoaderOnConfirm: true,\n        confirmButtonText: \"Yes, delete!\",\n        cancelButtonText: \"No, cancel\",\n        customClass: {\n          confirmButton: \"btn fw-bold btn-danger\",\n          cancelButton: \"btn fw-bold btn-active-light-primary\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          // Simulate delete request -- for demo purpose only\n          Swal.fire({\n            text: \"Deleting selected customers\",\n            icon: \"info\",\n            buttonsStyling: false,\n            showConfirmButton: false,\n            timer: 2000\n          }).then(function () {\n            Swal.fire({\n              text: \"You have deleted all selected customers!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // delete row data from server and re-draw datatable\n              dt.draw();\n            }); // Remove header checked box\n\n            var headerCheckbox = container.querySelectorAll('[type=\"checkbox\"]')[0];\n            headerCheckbox.checked = false;\n          });\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Selected customers was not deleted.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  }; // Toggle toolbars\n\n\n  var toggleToolbars = function toggleToolbars() {\n    // Define variables\n    var container = document.querySelector('#kt_datatable_example_1');\n    var toolbarBase = document.querySelector('[data-kt-docs-table-toolbar=\"base\"]');\n    var toolbarSelected = document.querySelector('[data-kt-docs-table-toolbar=\"selected\"]');\n    var selectedCount = document.querySelector('[data-kt-docs-table-select=\"selected_count\"]'); // Select refreshed checkbox DOM elements \n\n    var allCheckboxes = container.querySelectorAll('tbody [type=\"checkbox\"]'); // Detect checkboxes state & count\n\n    var checkedState = false;\n    var count = 0; // Count checked boxes\n\n    allCheckboxes.forEach(function (c) {\n      if (c.checked) {\n        checkedState = true;\n        count++;\n      }\n    }); // Toggle toolbars\n\n    if (checkedState) {\n      selectedCount.innerHTML = count;\n      toolbarBase.classList.add('d-none');\n      toolbarSelected.classList.remove('d-none');\n    } else {\n      toolbarBase.classList.remove('d-none');\n      toolbarSelected.classList.add('d-none');\n    }\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      initDatatable();\n      handleSearchDatatable();\n      initToggleToolbar();\n      handleFilterDatatable();\n      handleDeleteRows();\n      handleResetForm();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTDatatablesServerSide.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/custom/documentation/general/datatables/server-side.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/documentation/general/datatables/server-side.js"]();
/******/ 	
/******/ })()
;