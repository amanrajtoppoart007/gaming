/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/layout-builder/layout-builder.js":
/*!******************************************************************!*\
  !*** ./resources/src/js/custom/layout-builder/layout-builder.js ***!
  \******************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTLayoutBuilder = function () {\n  var form = document.querySelector(\"#kt_layout_builder_form\");\n  var actionInput = document.querySelector(\"#kt_layout_builder_action\");\n  var tabInput = document.querySelector(\"#kt_layout_builder_tab\");\n  var url = form.getAttribute(\"action\");\n  var previewButton = document.querySelector(\"#kt_layout_builder_preview\");\n  var exportButton = document.querySelector(\"#kt_layout_builder_export\");\n  var resetButton = document.querySelector(\"#kt_layout_builder_reset\");\n\n  var handleTab = function handleTab() {\n    var tabs = [].slice.call(document.querySelectorAll('#kt_layout_builder_tabs a[data-bs-toggle=\"tab\"]'));\n    tabs.forEach(function (tab) {\n      tab.addEventListener(\"shown.bs.tab\", function (e) {\n        tabInput.value = tab.getAttribute(\"href\").substring(1);\n      });\n    });\n  };\n\n  var handlePreview = function handlePreview() {\n    previewButton.addEventListener(\"click\", function (e) {\n      e.preventDefault(); // Set form action value\n\n      actionInput.value = \"preview\"; // Show progress\n\n      previewButton.setAttribute(\"data-kt-indicator\", \"on\"); // Prepare form data\n\n      var data = $(form).serialize(); // Submit\n\n      $.ajax({\n        type: \"POST\",\n        dataType: \"html\",\n        url: url,\n        data: data,\n        success: function success(response, status, xhr) {\n          toastr.success(\"Preview has been updated with current configured layout.\", \"Preview updated!\", {\n            timeOut: 0,\n            extendedTimeOut: 0,\n            closeButton: true,\n            closeDuration: 0\n          });\n          setTimeout(function () {\n            location.reload(); // reload page\n          }, 1500);\n        },\n        error: function error(response) {\n          toastr.error(\"Please try it again later.\", \"Something went wrong!\", {\n            timeOut: 0,\n            extendedTimeOut: 0,\n            closeButton: true,\n            closeDuration: 0\n          });\n        },\n        complete: function complete() {\n          previewButton.removeAttribute(\"data-kt-indicator\");\n        }\n      });\n    });\n  };\n\n  var handleExport = function handleExport() {\n    exportButton.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      toastr.success(\"Process has been started and it may take a while.\", \"Generating HTML!\", {\n        timeOut: 0,\n        extendedTimeOut: 0,\n        closeButton: true,\n        closeDuration: 0\n      }); // Show progress\n\n      exportButton.setAttribute(\"data-kt-indicator\", \"on\"); // Set form action value\n\n      actionInput.value = \"export\"; // Prepare form data\n\n      var data = $(form).serialize();\n      $.ajax({\n        type: \"POST\",\n        dataType: \"html\",\n        url: url,\n        data: data,\n        success: function success(response, status, xhr) {\n          var timer = setInterval(function () {\n            $(\"<iframe/>\").attr({\n              src: url + \"?layout-builder[action]=export&download=1&output=\" + response,\n              style: \"visibility:hidden;display:none\"\n            }).ready(function () {\n              // Stop the timer\n              clearInterval(timer);\n              exportButton.removeAttribute(\"data-kt-indicator\");\n            }).appendTo(\"body\");\n          }, 3000);\n        },\n        error: function error(response) {\n          toastr.error(\"Please try it again later.\", \"Something went wrong!\", {\n            timeOut: 0,\n            extendedTimeOut: 0,\n            closeButton: true,\n            closeDuration: 0\n          });\n          exportButton.removeAttribute(\"data-kt-indicator\");\n        }\n      });\n    });\n  };\n\n  var handleReset = function handleReset() {\n    resetButton.addEventListener(\"click\", function (e) {\n      e.preventDefault(); // Show progress\n\n      resetButton.setAttribute(\"data-kt-indicator\", \"on\"); // Set form action value\n\n      actionInput.value = \"reset\"; // Prepare form data\n\n      var data = $(form).serialize();\n      $.ajax({\n        type: \"POST\",\n        dataType: \"html\",\n        url: url,\n        data: data,\n        success: function success(response, status, xhr) {\n          toastr.success(\"Preview has been successfully reset and the page will be reloaded.\", \"Reset Preview!\", {\n            timeOut: 0,\n            extendedTimeOut: 0,\n            closeButton: true,\n            closeDuration: 0\n          });\n          setTimeout(function () {\n            location.reload(); // reload page\n          }, 1500);\n        },\n        error: function error(response) {\n          toastr.error(\"Please try it again later.\", \"Something went wrong!\", {\n            timeOut: 0,\n            extendedTimeOut: 0,\n            closeButton: true,\n            closeDuration: 0\n          });\n        },\n        complete: function complete() {\n          resetButton.removeAttribute(\"data-kt-indicator\");\n        }\n      });\n    });\n  };\n\n  return {\n    // Public functions\n    init: function init() {\n      handlePreview();\n      handleExport();\n      handleReset();\n      handleTab();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTLayoutBuilder.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL2N1c3RvbS9sYXlvdXQtYnVpbGRlci9sYXlvdXQtYnVpbGRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQ0FFQTs7QUFDQSxJQUFJQSxlQUFlLEdBQUcsWUFBVztBQUNoQyxNQUFJQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qix5QkFBdkIsQ0FBWDtBQUNBLE1BQUlDLFdBQVcsR0FBR0YsUUFBUSxDQUFDQyxhQUFULENBQXVCLDJCQUF2QixDQUFsQjtBQUNBLE1BQUlFLFFBQVEsR0FBR0gsUUFBUSxDQUFDQyxhQUFULENBQXVCLHdCQUF2QixDQUFmO0FBQ0EsTUFBSUcsR0FBRyxHQUFHTCxJQUFJLENBQUNNLFlBQUwsQ0FBa0IsUUFBbEIsQ0FBVjtBQUVBLE1BQUlDLGFBQWEsR0FBR04sUUFBUSxDQUFDQyxhQUFULENBQXVCLDRCQUF2QixDQUFwQjtBQUNBLE1BQUlNLFlBQVksR0FBR1AsUUFBUSxDQUFDQyxhQUFULENBQXVCLDJCQUF2QixDQUFuQjtBQUNBLE1BQUlPLFdBQVcsR0FBR1IsUUFBUSxDQUFDQyxhQUFULENBQXVCLDBCQUF2QixDQUFsQjs7QUFFQSxNQUFJUSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxHQUFXO0FBQzFCLFFBQUlDLElBQUksR0FBRyxHQUFHQyxLQUFILENBQVNDLElBQVQsQ0FBY1osUUFBUSxDQUFDYSxnQkFBVCxDQUEwQixpREFBMUIsQ0FBZCxDQUFYO0FBRUFILElBQUFBLElBQUksQ0FBQ0ksT0FBTCxDQUFhLFVBQVVDLEdBQVYsRUFBZTtBQUMzQkEsTUFBQUEsR0FBRyxDQUFDQyxnQkFBSixDQUFxQixjQUFyQixFQUFxQyxVQUFVQyxDQUFWLEVBQWE7QUFDakRkLFFBQUFBLFFBQVEsQ0FBQ2UsS0FBVCxHQUFpQkgsR0FBRyxDQUFDVixZQUFKLENBQWlCLE1BQWpCLEVBQXlCYyxTQUF6QixDQUFtQyxDQUFuQyxDQUFqQjtBQUNBLE9BRkQ7QUFHQSxLQUpEO0FBS0EsR0FSRDs7QUFVQSxNQUFJ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VUFBQUEsV0FBVyxDQUFDbUMsZUFBWixDQUE0QixtQkFBNUI7QUFDQTtBQXpCSyxPQUFQO0FBMkJBLEtBdkNEO0FBd0NBLEdBekNEOztBQTJDQSxTQUFPO0FBQ047QUFDQVcsSUFBQUEsSUFBSSxFQUFFLGdCQUFXO0FBQ2hCbEMsTUFBQUEsYUFBYTtBQUNid0IsTUFBQUEsWUFBWTtBQUNaUyxNQUFBQSxXQUFXO0FBQ1g1QyxNQUFBQSxTQUFTO0FBQ1Q7QUFQSyxHQUFQO0FBU0EsQ0F0S3FCLEVBQXRCLEMsQ0F3S0E7OztBQUNBOEMsTUFBTSxDQUFDQyxrQkFBUCxDQUEwQixZQUFXO0FBQ2pDMUQsRUFBQUEsZUFBZSxDQUFDd0QsSUFBaEI7QUFDSCxDQUZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3NyYy9qcy9jdXN0b20vbGF5b3V0LWJ1aWxkZXIvbGF5b3V0LWJ1aWxkZXIuanM/N2M3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUTGF5b3V0QnVpbGRlciA9IGZ1bmN0aW9uKCkge1xyXG5cdHZhciBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNrdF9sYXlvdXRfYnVpbGRlcl9mb3JtXCIpO1xyXG5cdHZhciBhY3Rpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfbGF5b3V0X2J1aWxkZXJfYWN0aW9uXCIpO1xyXG5cdHZhciB0YWJJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfbGF5b3V0X2J1aWxkZXJfdGFiXCIpO1x0XHJcblx0dmFyIHVybCA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiYWN0aW9uXCIpO1xyXG5cclxuXHR2YXIgcHJldmlld0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfbGF5b3V0X2J1aWxkZXJfcHJldmlld1wiKTtcclxuXHR2YXIgZXhwb3J0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNrdF9sYXlvdXRfYnVpbGRlcl9leHBvcnRcIik7XHJcblx0dmFyIHJlc2V0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNrdF9sYXlvdXRfYnVpbGRlcl9yZXNldFwiKTtcclxuXHJcblx0dmFyIGhhbmRsZVRhYiA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIHRhYnMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNrdF9sYXlvdXRfYnVpbGRlcl90YWJzIGFbZGF0YS1icy10b2dnbGU9XCJ0YWJcIl0nKSk7XHJcblxyXG5cdFx0dGFicy5mb3JFYWNoKGZ1bmN0aW9uICh0YWIpIHtcclxuXHRcdFx0dGFiLmFkZEV2ZW50TGlzdGVuZXIoXCJzaG93bi5icy50YWJcIiwgZnVuY3Rpb24gKGUpIHtcclxuXHRcdFx0XHR0YWJJbnB1dC52YWx1ZSA9IHRhYi5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpLnN1YnN0cmluZygxKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHR2YXIgaGFuZGxlUHJldmlldyA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0cHJldmlld0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0XHQvLyBTZXQgZm9ybSBhY3Rpb24gdmFsdWVcclxuXHRcdFx0YWN0aW9uSW5wdXQudmFsdWUgPSBcInByZXZpZXdcIjtcclxuXHJcblx0XHRcdC8vIFNob3cgcHJvZ3Jlc3NcclxuXHRcdFx0cHJldmlld0J1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkYXRhLWt0LWluZGljYXRvclwiLCBcIm9uXCIpO1xyXG5cclxuXHRcdFx0Ly8gUHJlcGFyZSBmb3JtIGRhdGFcclxuXHRcdFx0dmFyIGRhdGEgPSAkKGZvcm0pLnNlcmlhbGl6ZSgpO1xyXG5cclxuXHRcdFx0Ly8gU3VibWl0XHJcblx0XHRcdCQuYWpheCh7XHJcblx0XHRcdFx0dHlwZTogXCJQT1NUXCIsXHJcblx0XHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxyXG5cdFx0XHRcdHVybDogdXJsLFxyXG5cdFx0XHRcdGRhdGE6IGRhdGEsXHJcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2UsIHN0YXR1cywgeGhyKSB7XHJcblx0XHRcdFx0XHR0b2FzdHIuc3VjY2VzcyhcclxuXHRcdFx0XHRcdFx0XCJQcmV2aWV3IGhhcyBiZWVuIHVwZGF0ZWQgd2l0aCBjdXJyZW50IGNvbmZpZ3VyZWQgbGF5b3V0LlwiLCBcclxuXHRcdFx0XHRcdFx0XCJQcmV2aWV3IHVwZGF0ZWQhXCIsIFxyXG5cdFx0XHRcdFx0XHR7dGltZU91dDogMCwgZXh0ZW5kZWRUaW1lT3V0OiAwLCBjbG9zZUJ1dHRvbjogdHJ1ZSwgY2xvc2VEdXJhdGlvbjogMH1cclxuXHRcdFx0XHRcdCk7XHJcblxyXG5cdFx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0bG9jYXRpb24ucmVsb2FkKCk7IC8vIHJlbG9hZCBwYWdlXHJcblx0XHRcdFx0XHR9LCAxNTAwKTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGVycm9yOiBmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFx0dG9hc3RyLmVycm9yKFxyXG5cdFx0XHRcdFx0XHRcIlBsZWFzZSB0cnkgaXQgYWdhaW4gbGF0ZXIuXCIsIFxyXG5cdFx0XHRcdFx0XHRcIlNvbWV0aGluZyB3ZW50IHdyb25nIVwiLCBcclxuXHRcdFx0XHRcdFx0e3RpbWVPdXQ6IDAsIGV4dGVuZGVkVGltZU91dDogMCwgY2xvc2VCdXR0b246IHRydWUsIGNsb3NlRHVyYXRpb246IDB9XHJcblx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0Y29tcGxldGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0cHJldmlld0J1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWt0LWluZGljYXRvclwiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblx0fTtcclxuXHJcblx0dmFyIGhhbmRsZUV4cG9ydCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0ZXhwb3J0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHRcdHRvYXN0ci5zdWNjZXNzKFxyXG5cdFx0XHRcdFwiUHJvY2VzcyBoYXMgYmVlbiBzdGFydGVkIGFuZCBpdCBtYXkgdGFrZSBhIHdoaWxlLlwiLCBcclxuXHRcdFx0XHRcIkdlbmVyYXRpbmcgSFRNTCFcIiwgXHJcblx0XHRcdFx0e3RpbWVPdXQ6IDAsIGV4dGVuZGVkVGltZU91dDogMCwgY2xvc2VCdXR0b246IHRydWUsIGNsb3NlRHVyYXRpb246IDB9XHJcblx0XHRcdCk7XHJcblxyXG5cdFx0XHQvLyBTaG93IHByb2dyZXNzXHJcblx0XHRcdGV4cG9ydEJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkYXRhLWt0LWluZGljYXRvclwiLCBcIm9uXCIpO1xyXG5cclxuXHRcdFx0Ly8gU2V0IGZvcm0gYWN0aW9uIHZhbHVlXHJcblx0XHRcdGFjdGlvbklucHV0LnZhbHVlID0gXCJleHBvcnRcIjtcclxuXHRcdFx0XHJcblx0XHRcdC8vIFByZXBhcmUgZm9ybSBkYXRhXHJcblx0XHRcdHZhciBkYXRhID0gJChmb3JtKS5zZXJpYWxpemUoKTtcclxuXHJcblx0XHRcdCQuYWpheCh7XHJcblx0XHRcdFx0dHlwZTogXCJQT1NUXCIsXHJcblx0XHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxyXG5cdFx0XHRcdHVybDogdXJsLFxyXG5cdFx0XHRcdGRhdGE6IGRhdGEsXHJcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2UsIHN0YXR1cywgeGhyKSB7XHJcblx0XHRcdFx0XHR2YXIgdGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0JChcIjxpZnJhbWUvPlwiKS5hdHRyKHtcclxuXHRcdFx0XHRcdFx0XHRzcmM6IHVybCArIFwiP2xheW91dC1idWlsZGVyW2FjdGlvbl09ZXhwb3J0JmRvd25sb2FkPTEmb3V0cHV0PVwiICsgcmVzcG9uc2UsXHJcblx0XHRcdFx0XHRcdFx0c3R5bGU6IFwidmlzaWJpbGl0eTpoaWRkZW47ZGlzcGxheTpub25lXCIsXHJcblx0XHRcdFx0XHRcdH0pLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdC8vIFN0b3AgdGhlIHRpbWVyXHJcblx0XHRcdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbCh0aW1lcik7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGV4cG9ydEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWt0LWluZGljYXRvclwiKTtcclxuXHRcdFx0XHRcdFx0fSkuYXBwZW5kVG8oXCJib2R5XCIpO1xyXG5cdFx0XHRcdFx0fSwgMzAwMCk7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRlcnJvcjogZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdHRvYXN0ci5lcnJvcihcclxuXHRcdFx0XHRcdFx0XCJQbGVhc2UgdHJ5IGl0IGFnYWluIGxhdGVyLlwiLCBcclxuXHRcdFx0XHRcdFx0XCJTb21ldGhpbmcgd2VudCB3cm9uZyFcIiwgXHJcblx0XHRcdFx0XHRcdHt0aW1lT3V0OiAwLCBleHRlbmRlZFRpbWVPdXQ6IDAsIGNsb3NlQnV0dG9uOiB0cnVlLCBjbG9zZUR1cmF0aW9uOiAwfVxyXG5cdFx0XHRcdFx0KTtcclxuXHJcblx0XHRcdFx0XHRleHBvcnRCdXR0b24ucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1rdC1pbmRpY2F0b3JcIik7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHR2YXIgaGFuZGxlUmVzZXQgPSBmdW5jdGlvbigpIHtcclxuXHRcdHJlc2V0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHRcdC8vIFNob3cgcHJvZ3Jlc3NcclxuXHRcdFx0cmVzZXRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGF0YS1rdC1pbmRpY2F0b3JcIiwgXCJvblwiKTtcclxuXHJcblx0XHRcdC8vIFNldCBmb3JtIGFjdGlvbiB2YWx1ZVxyXG5cdFx0XHRhY3Rpb25JbnB1dC52YWx1ZSA9IFwicmVzZXRcIjtcclxuXHRcdFx0XHJcblx0XHRcdC8vIFByZXBhcmUgZm9ybSBkYXRhXHJcblx0XHRcdHZhciBkYXRhID0gJChmb3JtKS5zZXJpYWxpemUoKTtcclxuXHJcblx0XHRcdCQuYWpheCh7XHJcblx0XHRcdFx0dHlwZTogXCJQT1NUXCIsXHJcblx0XHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxyXG5cdFx0XHRcdHVybDogdXJsLFxyXG5cdFx0XHRcdGRhdGE6IGRhdGEsXHJcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2UsIHN0YXR1cywgeGhyKSB7XHJcblx0XHRcdFx0XHR0b2FzdHIuc3VjY2VzcyhcclxuXHRcdFx0XHRcdFx0XCJQcmV2aWV3IGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSByZXNldCBhbmQgdGhlIHBhZ2Ugd2lsbCBiZSByZWxvYWRlZC5cIiwgXHJcblx0XHRcdFx0XHRcdFwiUmVzZXQgUHJldmlldyFcIiwgXHJcblx0XHRcdFx0XHRcdHt0aW1lT3V0OiAwLCBleHRlbmRlZFRpbWVPdXQ6IDAsIGNsb3NlQnV0dG9uOiB0cnVlLCBjbG9zZUR1cmF0aW9uOiAwfVxyXG5cdFx0XHRcdFx0KTtcclxuXHJcblx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRsb2NhdGlvbi5yZWxvYWQoKTsgLy8gcmVsb2FkIHBhZ2VcclxuXHRcdFx0XHRcdH0sIDE1MDApO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZXJyb3I6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHR0b2FzdHIuZXJyb3IoXHJcblx0XHRcdFx0XHRcdFwiUGxlYXNlIHRyeSBpdCBhZ2FpbiBsYXRlci5cIiwgXHJcblx0XHRcdFx0XHRcdFwiU29tZXRoaW5nIHdlbnQgd3JvbmchXCIsIFxyXG5cdFx0XHRcdFx0XHR7dGltZU91dDogMCwgZXh0ZW5kZWRUaW1lT3V0OiAwLCBjbG9zZUJ1dHRvbjogdHJ1ZSwgY2xvc2VEdXJhdGlvbjogMH1cclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRjb21wbGV0ZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRyZXNldEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWt0LWluZGljYXRvclwiKTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHR9KTtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiB7XHJcblx0XHQvLyBQdWJsaWMgZnVuY3Rpb25zXHJcblx0XHRpbml0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0aGFuZGxlUHJldmlldygpO1xyXG5cdFx0XHRoYW5kbGVFeHBvcnQoKTtcclxuXHRcdFx0aGFuZGxlUmVzZXQoKTtcclxuXHRcdFx0aGFuZGxlVGFiKCk7XHJcblx0XHR9XHJcblx0fTtcclxufSgpO1xyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUTGF5b3V0QnVpbGRlci5pbml0KCk7XHJcbn0pOyJdLCJuYW1lcyI6WyJLVExheW91dEJ1aWxkZXIiLCJmb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWN0aW9uSW5wdXQiLCJ0YWJJbnB1dCIsInVybCIsImdldEF0dHJpYnV0ZSIsInByZXZpZXdCdXR0b24iLCJleHBvcnRCdXR0b24iLCJyZXNldEJ1dHRvbiIsImhhbmRsZVRhYiIsInRhYnMiLCJzbGljZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInRhYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwidmFsdWUiLCJzdWJzdHJpbmciLCJoYW5kbGVQcmV2aWV3IiwicHJldmVudERlZmF1bHQiLCJzZXRBdHRyaWJ1dGUiLCJkYXRhIiwiJCIsInNlcmlhbGl6ZSIsImFqYXgiLCJ0eXBlIiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJ4aHIiLCJ0b2FzdHIiLCJ0aW1lT3V0IiwiZXh0ZW5kZWRUaW1lT3V0IiwiY2xvc2VCdXR0b24iLCJjbG9zZUR1cmF0aW9uIiwic2V0VGltZW91dCIsImxvY2F0aW9uIiwicmVsb2FkIiwiZXJyb3IiLCJjb21wbGV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImhhbmRsZUV4cG9ydCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJhdHRyIiwic3JjIiwic3R5bGUiLCJyZWFkeSIsImNsZWFySW50ZXJ2YWwiLCJhcHBlbmRUbyIsImhhbmRsZVJlc2V0IiwiaW5pdCIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/custom/layout-builder/layout-builder.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/layout-builder/layout-builder.js"]();
/******/ 	
/******/ })()
;